{"ast":null,"code":"var _a, _b, _c;\n\nimport { __decorate, __metadata, __param } from \"tslib\";\nimport { Component, Inject, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ParnerService } from '@app/@shared/services/partner/partner.service';\nlet PartnerComponent = class PartnerComponent {\n  constructor(formBulder, dialog, router, parnerService) {\n    this.formBulder = formBulder;\n    this.dialog = dialog;\n    this.router = router;\n    this.parnerService = parnerService;\n    this.configList = [];\n    this.showFilter = false;\n    this.pageForm = this.formBulder.group({\n      name: new FormControl(''),\n      cnpj: new FormControl('')\n    });\n    this.displayedColumns = ['nome', 'cnpj', 'comissao', 'url', 'options'];\n  }\n\n  ngOnInit() {\n    this.parnerService.partnerList().subscribe(data => {\n      this.configList = data;\n      const contracts = this.configList;\n      this.dataSource = new MatTableDataSource(contracts);\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  sortData(sort) {\n    console.log(sort);\n  }\n\n  onSubmit() {}\n\n  deletePartner(partner) {\n    const dialogRef = this.dialog.open(DeleteDialog, {\n      width: '350px',\n      data: partner\n    });\n    dialogRef.afterClosed().subscribe(confirmed => {\n      if (confirmed) {\n        this.configList.splice(partner, 1);\n        this.parnerService.setConfig(this.configList).subscribe(() => {\n          this.router.navigateByUrl('/', {\n            skipLocationChange: true\n          }).then(() => this.router.navigate(['/page/partner']));\n        });\n      }\n    });\n  }\n\n};\n\n__decorate([ViewChild(MatSort), __metadata(\"design:type\", typeof (_a = typeof MatSort !== \"undefined\" && MatSort) === \"function\" ? _a : Object)], PartnerComponent.prototype, \"sort\", void 0);\n\nPartnerComponent = __decorate([Component({\n  selector: 'app-partner',\n  templateUrl: './partner.component.html',\n  styleUrls: ['./partner.component.scss']\n}), __metadata(\"design:paramtypes\", [FormBuilder, typeof (_b = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _b : Object, Router, ParnerService])], PartnerComponent);\nexport { PartnerComponent };\nlet DeleteDialog = class DeleteDialog {\n  constructor(dialogRef, data) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n  }\n\n  confirmar(confirmed) {\n    this.dialogRef.close({\n      confirmed\n    });\n  }\n\n};\nDeleteDialog = __decorate([Component({\n  selector: 'delete-dialog',\n  template: `<h1 mat-dialog-title>Exclusão de registro</h1>\n    <div mat-dialog-content>\n      <p>\n        Tem certeza que deseja excluir o parceiro <b>{{ data.nome }}</b\n        >? <br />A exclusão é irreversível!\n      </p>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-button (click)=\"confirmar(true)\" cdkFocusInitial>Comfirmar</button>\n      <button mat-button (click)=\"confirmar(false)\">Cancelar</button>\n    </div>`\n}), __param(1, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [typeof (_c = typeof MatDialogRef !== \"undefined\" && MatDialogRef) === \"function\" ? _c : Object, Object])], DeleteDialog);\nexport { DeleteDialog };","map":null,"metadata":{},"sourceType":"module"}