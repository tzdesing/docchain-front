{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { IUser } from \"@app/@shared/model\";\nimport { environment } from \"@env/environment\";\nimport { map } from \"rxjs/operators\";\nimport { DatabaseService } from \"../database/database.service\";\nimport { ParnerService } from \"../partner/partner.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../database/database.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../partner/partner.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(db, http, parnerService) {\n      this.db = db;\n      this.http = http;\n      this.parnerService = parnerService;\n      this.env = environment;\n    }\n    /**\r\n     * Auth user using jwt token\r\n     */\n\n\n    login(email, password) {\n      return new Promise((resolve, reject) => {\n        this.http.get(`${this.env.url}auth${this.env.suffix}`).pipe(map(users => {\n          var _a;\n\n          return (_a = users.filter(user => user.email === email && user.password === password)) === null || _a === void 0 ? void 0 : _a.shift();\n        })).subscribe(user => {\n          if (user && user.email) {\n            this.parnerService.partnerList().subscribe(data => {\n              localStorage.setItem('parnerList', JSON.stringify(data));\n            });\n\n            if (user.nome === \"Localiza\") {\n              window.localStorage.removeItem('empresaLogada');\n              window.localStorage.setItem('empresaLogada', '1');\n            }\n\n            if (user.nome === \"Decolar\") {\n              window.localStorage.removeItem('empresaLogada');\n              window.localStorage.setItem('empresaLogada', '2');\n            }\n\n            if (user.nome === \"Latam\") {\n              window.localStorage.removeItem('empresaLogada');\n              window.localStorage.setItem('empresaLogada', '3');\n            }\n\n            this.db.createUser(user);\n            resolve(true);\n          }\n\n          if (!user || !(user === null || user === void 0 ? void 0 : user.email)) {\n            reject(false);\n          }\n        }, () => {\n          reject(false);\n        });\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.DatabaseService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.ParnerService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}