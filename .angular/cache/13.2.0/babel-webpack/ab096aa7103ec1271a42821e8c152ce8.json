{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpClient } from '@angular/common/http';\nimport { IPartner, IUser } from '@app/@shared/model';\nimport { DatabaseService } from '../database/database.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../database/database.service\";\nexport let ContractService = /*#__PURE__*/(() => {\n  class ContractService {\n    constructor(http, db) {\n      this.http = http;\n      this.db = db;\n      this.user = {};\n\n      (() => __awaiter(this, void 0, void 0, function* () {\n        this.user = yield this.db.user.toCollection().first();\n      }))();\n    }\n\n    create(data) {\n      /*\r\n      // dentro do playload\r\n      doc:{\r\n      docHash: string;\r\n      signature?: string;\r\n      pdfSigned?: any;\r\n      }\r\n      */\n      console.log({\n        data\n      });\n      return this.http.post(`${this.user.url}/register/?${this.user.parametro}`, data);\n    }\n\n    getRegisterById(id) {\n      return this.http.get(`${this.user.url}/register/${id}`);\n    }\n\n    getRegisters() {\n      return this.http.get(`${this.user.url}/my-batches`);\n    }\n\n    uploadFileAndSign(file) {\n      const empresaLogada = window.localStorage.getItem('empresaLogada');\n      const jsonData = JSON.parse(window.localStorage.getItem('parnerList'));\n      const dadosEmpresa = jsonData.find(empresa => empresa.parametro === empresaLogada);\n      console.log(file);\n      const data = {\n        file: file.arrayBuffer,\n        name: dadosEmpresa.nome,\n        email: dadosEmpresa.email,\n        user: dadosEmpresa.cnpj\n      };\n      const form = new FormData();\n      form.append('file', file);\n      form.append('email', data.email);\n      form.append('user', 'alan');\n      form.append('name', '');\n      console.log({\n        data,\n        form,\n        file: file.arrayBuffer\n      });\n      return this.http.post('http://localhost:4200/api4/signDocument', form, {\n        reportProgress: true\n      });\n    }\n\n    uploadFileDirect(file) {\n      const data = new FormData();\n      const empresaLogada = window.localStorage.getItem('empresaLogada');\n      const jsonData = JSON.parse(window.localStorage.getItem('parnerList'));\n      console.log('uploadFileDirect', {\n        file\n      });\n      data.append('file', file);\n      console.log(data);\n      let url = jsonData[0].url;\n\n      if (empresaLogada === '2') {\n        url = jsonData[1].url;\n      } else if (empresaLogada === '3') {\n        url = jsonData[2].url;\n      }\n\n      return this.http.post(url + '/upload', data, {\n        responseType: 'text',\n        reportProgress: true\n      });\n    }\n\n    donwloadFile(hash) {\n      return this.http.get(localStorage.getItem('apiBaseUrlA') + '/attachments/' + hash, {\n        responseType: 'blob'\n      });\n    }\n\n    getSignedDoc(hash) {\n      const empresaLogada = window.localStorage.getItem('empresaLogada');\n      const jsonData = JSON.parse(window.localStorage.getItem('parnerList'));\n      let url = jsonData[0].url; // return this.http.get<any>(url + '/attachments/' + hash, {\n      //   responseType: 'arraybuffer' as 'json',\n      // });\n\n      return this.http.get(url + '/attachments/' + hash, {\n        responseType: 'blob'\n      });\n    }\n\n    signDocument(file, password) {\n      console.log('file', file);\n      console.log('password', password);\n      console.log(file instanceof Blob);\n      return new Promise((resolve, reject) => {\n        const form = new FormData();\n        form.append('file', file);\n        let fileReader = new FileReader();\n        let arr = [];\n        console.log(form);\n        this.getPdfFile().subscribe(filePDF => __awaiter(this, void 0, void 0, function* () {\n          // await sign();\n          console.log('file', filePDF);\n          const fileArr = yield file.arrayBuffer();\n          console.log('fileArr', fileArr); // const fileBuff = this.convertArrayBufferToBuffer(fileArr);\n          // console.log(fileBuff);\n\n          resolve();\n        }));\n      });\n    }\n\n    getPdfFile() {\n      return this.http.get('./assets/pdf-example.pdf', {\n        responseType: 'arraybuffer'\n      });\n    }\n\n  }\n\n  ContractService.ɵfac = function ContractService_Factory(t) {\n    return new (t || ContractService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.DatabaseService));\n  };\n\n  ContractService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContractService,\n    factory: ContractService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContractService;\n})();","map":null,"metadata":{},"sourceType":"module"}